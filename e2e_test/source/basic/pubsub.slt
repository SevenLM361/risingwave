# fail with invalid emulator_host
statement error
CREATE TABLE s1 (v1 int, v2 varchar) WITH (
    pubsub.subscription = 'test-subscription-1',
    pubsub.emulator_host = 'localhost:5981',
    pubsub.split_count = 3
) FORMAT PLAIN ENCODE JSON;

statement ok
CREATE TABLE s1 (v1 int, v2 varchar) WITH (
    connector = 'google_pubsub',
    pubsub.subscription = 'test-subscription-1',
    pubsub.emulator_host = 'localhost:5980',
    pubsub.split_count = 3
) FORMAT PLAIN ENCODE JSON;

statement ok
SELECT * FROM s1;

statement ok
DROP TABLE s1;

# fail with invalid subscription
statement error
CREATE TABLE s2 (v1 int, v2 varchar) WITH (
    connector = 'google_pubsub',
    pubsub.subscription = 'test-subscription-not-2',
    pubsub.emulator_host = 'localhost:5980',
    pubsub.split_count = 3
) FORMAT PLAIN ENCODE JSON;

statement ok
CREATE TABLE s2 (v1 int, v2 varchar) WITH (
    connector = 'google_pubsub',
    pubsub.subscription = 'test-subscription-2',
    pubsub.emulator_host = 'localhost:5980',
    pubsub.split_count = 3
) FORMAT PLAIN ENCODE JSON;

# fail with invalid split count
statement error
CREATE TABLE s3 (v1 int, v2 varchar) WITH (
    connector = 'google_pubsub',
    pubsub.subscription = 'test-subscription-3',
    pubsub.emulator_host = 'localhost:5980',
    pubsub.split_count = 0
) FORMAT PLAIN ENCODE JSON;

# fail if both start_offset and start_snapshot are provided
statement error
CREATE TABLE s3 (v1 int, v2 varchar) WITH (
    connector = 'google_pubsub',
    pubsub.subscription = 'test-subscription-3',
    pubsub.emulator_host = 'localhost:5980',
    pubsub.split_count = 2,
    pubsub.start_offset = "121212",
    pubsub.start_snapshot = "snapshot-that-doesnt-exist"
) FORMAT PLAIN ENCODE JSON;

# wait for source
sleep 10s

# flush data into storage
statement ok
flush;

query IT rowsort
select v1, v2 FROM s2;
----
0 name5
0 name9
1 name0
1 name7
2 name0
2 name3
3 name2
3 name9
4 name6
4 name7
5 name3
5 name8
6 name3
6 name4
7 name0
7 name5
8 name8
8 name9
9 name2
9 name2

statement ok
DROP TABLE s2;

